.main
  #List.block.left.relative<
    = text_field_tag 'box[name]', @box.name, placeholder: 'List Name', id:'boxNameField',style: ('display:none' if !params[:edit] || %(collection wishlist giveaway).include?(@box.slug) ), class: 'formIndent bigMargin smallMargin', 'data-id' => @box.id
    %h1#boxName.smallMargin{style: ('display:none' if params[:edit] && !%(collection wishlist giveaway).include?(@box.slug) )}<
      %span<= @box.adapt_name
      - if is_owner
        = link_to gather_user_box_path(@user, @box), style: ('display:none' if params[:edit]), class: 'relative tipped', remote: true do
          .tooltip.tippedR.noWrap
            .tip
            %span= t 'tooltip.add_polish'
          %svg.icon.button.inline.roundButton.previewButton
            <use xlink:href=#plus />
    - if is_owner
      = form_tag import_user_box_path(@user, @box), id: 'controls', class: 'controls', multipart: true do
        = label_tag :spreadsheet, t('user.import')
        = file_field_tag :spreadsheet, class: 'hidden', 'data-updatable' => true
        = submit_tag 'import', class: 'hidden', name: 'preview'
        %span.switch{'data-activate' => '#exportMenu'}>= t('user.export')
        %span#doneEditing.active{style: ('display:none' unless params[:edit])}>= link_to t('form.done_editing'), user_box_path(@user, @box, done_editing: true), remote: true
        %span#goEdit{style: ('display:none' if params[:edit])}>= link_to t('form.edit'), edit_user_box_path(@user, @box), remote: true
      = form_tag download_box_path(@user, @box) do
        - setup = Box::EXPORT_OPTIONS
        - type = params[:export] || 'xlsx'
        %ul#exportMenu{class: params[:export] ? 'menu formed active' : 'menu formed'}
          %li.current.formed= t('user.export_setup')
          %li.controls.noMargin
            %span{class: ('active' if type == 'xlsx')}= link_to 'XLSX', export: 'xlsx'
            %span{class: ('active' if type == 'csv')}= link_to 'CSV', export: 'csv'
            %span{class: ('active' if type == 'image')}= link_to 'Image', export: 'image'
          %li.switchHolder <svg class='icon linkLike switch' data-activate='#exportMenu'><use xlink:href='#x'/></svg>
          - %w(colour bottle nail rating note).each do |e|
            - if setup[type].keys.include? e
              %li.notCurrent
                %label{for: e}
                  = t 'controls.include_' + e
                  = check_box_tag e, 'yes', setup[type][e], class: 'hidden'
                  .checkBox{for: e} <svg class='icon check'><use xlink:href='#check' /></svg>
          - if setup[type].keys.include? 'bg_colour'
            %li.notCurrent
              %label{for: 'bg_colour'}= t 'controls.export_colour'
              = text_field_tag :bg_colour, setup[type]['bg_colour'], class: 'colour inMenu'
          - if setup[type].keys.include? 'columns'
            %li.notCurrent
              %label{for: 'columns'}= t 'controls.export_columns'
              = number_field_tag :columns, setup[type]['columns'],  max: 9, min: 1
          %li.formLi
            = button_tag 'Download', value: (params[:export] || 'xlsx'), class: 'inline noWrap wide100'
              
    
    #secondarySearchResults<
    #secondaryResults<
      = render @polishes, big_polish: true
    - if is_owner    
      #gather{class: (params[:action] == 'gather' ? 'menu active' : 'menu' )}
        .current
          %span.header
            - if %(collection wishlist giveaway).include?(@box.slug)
              = t('user.list.' + @box.slug)
            - else
              = @box.name
        = link_to "<svg class='icon' data-activate='#boxesList'><use xlink:href='#x'/></svg>".html_safe, user_box_path(@user,@box.slug), class: 'switch wideAuto', remote: true
        .formLi.smallMargin= render 'search', setup: %w(brand polish), collect_search: true, css: 'wide100 autoupdatable', remote: true
        #searchResults<
        #results<
          - if params[:action] == 'gather'
            = render @addable, add: true
    
  %section#Catalogue.block.left
    .formIndent
      = render 'search', setup: ['polish'], css: 'bigMargin wide100 autoupdatable', collection_search: true, id: 'secondarySearch', remote: true
  
    = form_tag collection_search_path(box_id: @box.id), remote: true do
      = hidden_field_tag :polish, params[:polish], id: 'filterPolish'
  
      %h3= t 'user.headers.sort'
      #sort.controls.bottomMargin<
        - cookies[:box_sort] ||= 'time'
        - %w(slug rating colour created_at).each do |c|
          - if cookies[:box_sort] == c
            %span.active= t('controls.by_' + c)
          - else
            = label_tag 'box_sort_' + c, t('controls.by_' + c)
          = submit_tag c, name: 'box_sort', id: 'box_sort_' + c, class: 'hidden'
        
      %h3= t 'user.headers.brands'
      #tags.tags.bottomMargin<
        - @brands.each do |brand|
          = brand_to_tag(brand)
      = submit_tag nil, name: 'preview', class: 'hidden', id: 'submitFilterBrands'
      
    = render 'lists'
    ToDo: design 
    = link_to 'clear list', clear_user_box_path(@user,@box), method: :post
    and 
    = link_to 'destroy', user_box_path(@user,@box), method: :delete
    buttons
  .clearFix
  
